[{"id":"d072989fb1060a7ab47385f712edd6a0","title":"能遇见你，甚是开心","content":"博客初建，入站须知\n欢迎来到我的世界，这是我的个人博客，目前已初具规模。\n本博客是基于Hexo框架搭建，采用hexo-theme-aurora主题并加以改进。\n后期也会不定时增加新的功能，敬请期待！！！\n\n","slug":"能遇见你，甚是开心","date":"2221-08-04T05:53:41.000Z","categories_index":"介绍文档","tags_index":"入站须知","author_index":"DY"},{"id":"d0c3b324c98ec4133cf888a2a0f21358","title":"LeetCode 第 217 题：存在重复元素","content":"\n\n\n\n\n\n\n\n\n题目来源于 LeetCode 上第 217 题：存在重复元素。题目难度为 Easy，目前通过率为 55.6% 。\n题目描述给定一个整数数组，判断是否存在重复元素。\n如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。\n示例 1：\n输入: [1,2,3,1]\n输出: true\n\n示例 2：\n输入: [1,2,3,4]\n输出: false\n\n\n示例 3：\n输入: [1,1,1,3,3,4,3,2,4,2]\n输出: true\n\n\n\n\n题目解析方法一：排序法\n思路：\n\n倘若数组是有序的，则数组内的重复元素必会处于相邻的位置中。\n因此，可以先对数组进行排序，得到一个有序数组后；再进行循环遍历，依次判断相邻的两个元素是否相等。若相等则说明存在重复的元素，反之，则不存在。\n\n代码：\n\n复杂度分析：\n\n时间复杂度：O(nlogn)，其中 n 为数组的长度。需要对数组进行排序。\n\n空间复杂度：O(logn)，其中 n 为数组的长度。注意我们在这里应当考虑Arrays.sort(nums)递归调用栈的深度。\n\n\n\n方法二：哈希表（Set）法\n思路：\n\n针对本题，可以考虑利用Set不能存放重复元素的特性进行解决。\n依次将数组内的元素插入到Set中，若插入时发现该元素已存在，则说明数组中存在重复元素；反之，则不存在。\n\n代码：\n\n复杂度分析：\n\n时间复杂度：O(n)，其中 n 为数组的长度。\n空间复杂度：O(n)，其中 n 为数组的长度。\n\n\n","slug":"LeetCode 第 217 题：存在重复元素","date":"2021-11-21T23:19:39.000Z","categories_index":"LeetCode","tags_index":"LeetCode,数据结构","author_index":"DY"},{"id":"0d7947cab2e1062d5a9c5fb40e1c666f","title":"LeetCode 第 1 题：两数之和","content":"\n\n\n\n\n\n\n\n\n题目来源于 LeetCode 上第 1 题：两数之和。题目难度为 Easy，目前通过率为 51.9% 。\n题目描述给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。\n你可以按任意顺序返回答案。\n示例 1：\n输入：nums &#x3D; [2,7,11,15], target &#x3D; 9\n输出：[0,1]\n解释：因为 nums[0] + nums[1] &#x3D;&#x3D; 9 ，返回 [0, 1] 。\n\n示例 2：\n输入：nums &#x3D; [3,2,4], target &#x3D; 6\n输出：[1,2]\n\n\n示例 3：\n输入：nums &#x3D; [3,3], target &#x3D; 6\n输出：[0,1]\n\n\n\n\n题目解析方法一：暴力求解\n思路：\n\n可通过循环遍历得出数组内不同的两个元素的组合\n依次检查它们所对应的组合之和是否等于目标值target\n\n代码：\n\n复杂度分析：\n\n时间复杂度：O(n2)，其中 n 是数组中的元素数量。最坏情况下数组中任意两个数都要被匹配一次。\n\n空间复杂度：O(1)，只用到常数个临时变量。\n\n\n\n方法二：查找表法\n解析：\n\n针对方法一中的复杂度分析，可以考虑使用以空间换时间的方式进行算法优化。\n可以在进行遍历的过程中，将必要的信息记录下来，以减少循环层数，这就是以空间换时间的想法。\n在本题中需要将遍历过的数值和其对应的下标值记录下来，可以通过借助查找表实现。\n查找表的两个常用的实现：\n哈希表\n平衡二叉搜索树\n\n\n由于本题中不需要考虑查找表内元素的顺序情况，故选择哈希表来实现。\n\n思路：\n\n设置一个map容器用来存储数组内的元素值与对应的索引值，然后对数组进行遍历。\n\n在遍历过程中：\n\n将目标值与当前值的差值保存在一个临时变量another中。\n依次查找map集合中是否存在与another相等的值。\n查找成功，则返回map集合中对应another的索引值与当前数组元素的索引值；\n查找失败，则将当前数组元素与其对应索引值保存到map集合中。\n\n\n\n\n\n代码：\n\n复杂度分析：\n\n时间复杂度：O(n)，其中 n 是数组中的元素数量。\n空间复杂度：O(n)，其中 n 是数组中的元素数量，哈希表里最多需要存n-1个键值对。\n\n\n","slug":"LeetCode 第 1 题：两数之和","date":"2021-08-23T10:40:39.000Z","categories_index":"LeetCode","tags_index":"LeetCode","author_index":"DY"},{"id":"5b529bc961ddf131c996e016ee65a777","title":"LeetCode插件在IDEA中的使用详解","content":"一、下载安装1.点击File-&gt;Setting-&gt;Plugins，搜索leetcode再点击install进行下载。\n\n如果遇到搜不到的情况，可以尝试重新打开Setting再次尝试，若还没有解决，可以去官网插件库下载，然后导入就可以了。链接：https://plugins.jetbrains.com/plugin/12132-leetcode-editor\n2.下载完成后重启idea，右下角会有leetcode菜单。\n\n\n二、配置1.点击File-&gt;Settings-&gt;Tools-&gt;leetcode plugin，如图：\n\n2.自定义模板配置\n下面介绍我使用的配置模板为：\nCodeFileName：自动生成类的类名。\nP$!&#123;question.frontendQuestionId&#125;_$!velocityTool.camelCaseName($&#123;question.titleSlug&#125;)\n\nCodeTemplate：自动生成的代码格式。\n$&#123;question.content&#125;\n\npackage leetcode.editor.cn;\n\n&#x2F;**\n * $&#123;question.title&#125;\n * @author DY\n * @date $!velocityTool.date()\n *&#x2F;\npublic class P$&#123;question.frontendQuestionId&#125;_$!velocityTool.camelCaseName($&#123;question.titleSlug&#125;)&#123;\n\t public static void main(String[] args) &#123;\n\t \t &#x2F;&#x2F;测试代码\n\t \t Solution solution &#x3D; new P$!&#123;question.frontendQuestionId&#125;_$!velocityTool.camelCaseName($&#123;question.titleSlug&#125;)().new Solution();\n\t &#125;\n\t \n&#x2F;&#x2F;力扣代码\n$&#123;question.code&#125;\n&#125;\n\n3.完后以上配置记得点击Apply后再退出。\n4.模板效果预览：\n\n关于下面几个参数的定义，官方解释为：\n\nCustom code template: 开启使用自定义模板，否则使用默认生成格式\nCodeFileName: 生成文件的名称，默认为题目标题\nCodeTemplate: 生成题目代码的内容，默认为题目描述和题目代码\nTemplateConstant： 模板常用变量\n${question.title}：题目标题，例如:两数之和\n${question.titleSlug}：题目标记，例如:two-sum\n${question.frontendQuestionId}：题目编号，例如:1\n${question.content}：题目描述内容\n${question.code}：题目代码部分\n$!velocityTool.camelCaseName(str)：一个函数，用来将字符串转化为驼峰样式\n\n【注】：在生成的自定义代码中包含两行关键信息，不能被删除和修改，否则将识别不到提交的内容。\n\n\n\n\n\n\n\n\n\nleetcode submit region begin(Prohibit modification and deletion)：提交到leetcode进行验证的代码开始标记leetcode submit region end(Prohibit modification and deletion)：提交到leetcode进行验证的代码结束标记\n这两行标记标示了提交到leetcode服务器进行验证的代码范围,在此范围内只允许有出现与题目解答相关的内容，出现其他内容可能导致leetcode验证不通过。除了此范围内，其他区域是可以任意填写的，内容不会提交到leetcode，可以增加一些可以本地调试的内容，例如:import java.util.Arrays;所以，这两行内容是不能被删除和修改的，否则将识别不到提交的内容。\n\n三、使用1.点击右下角的按钮，然后点击左上面的图标进行联网登录，登陆成功就是图中的画面了。双击题目，就会根据模板自动创建类。\n\n2.写完代码，右键运行提交至LeetCode。\n\n\n\n四、问题问题1：登录失败点击登录，显示登录失败，并弹出以下窗口。\n\n解决方法\n根据官方文档说明，可以采用cookie登录。\n\n\n\n\n\n\n\n\n\n在leetcode插件配置页配置用户名密码,如登录失败将加载下面两种登录方式,此方式仅支持leetcode-cn.com\n首先在浏览器中登录leetcode，打开浏览器控制台，复制cookie。\nLeetCode\n\n将复制的内容粘贴登录弹出框，点击login即可。\n\n问题2：红色的.java无效文件在登录成功后，双击题目名字，会生成一个红色的.java无效文件。\n解决方法\n\n首先Custom Template一定要勾选√上。\n\n然后你的文件路径这里设置到src，也就是你source过的文件夹。或者是将你设置的文件夹source一下。\n\n其次就是你的模板中package不要改变。\n\n\n\n\n\n","slug":"LeetCode插件在IDEA中的使用详解","date":"2021-08-23T07:48:23.000Z","categories_index":"IntelliJ IDEA","tags_index":"LeetCode,IntelliJ IDEA","author_index":"DY"},{"id":"10f36c333f0a4a8cdf24affc8fa84ed2","title":"技术词汇拼写","content":"本文旨在总结程序员写简历时必须注意的词汇拼写注意事项，以供必要时查阅！\n\n后端开发\nRESTful\nWeb\nJava\nLinux\nRuntime\nMySQL\nSQLite\nSpring\nSpring Boot\nSpring Cloud\nSpring MVC\nNoSQL\nMyBatis\nMaven\nRedis\nElasticsearch\n持续更新中……\n\n\n前端开发\nHTML\nHTTP\nCSS\nJavaScript\nNode.js\nVue.js\n持续更新中……\n\n\n其他Git\nEclipse\nIntelliJ IDEA\n\n","slug":"技术词汇拼写","date":"2021-08-04T05:53:41.000Z","categories_index":"简历","tags_index":"技术词汇","author_index":"DY"},{"id":"79b6b843cbaa68978daf1a5b2c2f8a3f","title":"Markdown写作语法","content":"一、标题使用#标记\n使用#号可表示1-6级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n二、段落\n粗体：在文字两边分别加**\n\n斜体：在文字两边分别加*\n\n斜粗体：在文字两边分别加*\n\n分割线：使用三个或三个以上的-或者*都可以\n\n删除线：在文字两边分别加两个波浪号(~)\n\n下划线：在文字两边添加HTML的&lt;u&gt;标签来实现\n&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;\n脚注：语法格式如下\n[^要注明的文本]\n\n\n\n\n三、列表无序列表使用*、+或是-作为列表标记，这些标记后面要添加一个空格，然后再填写内容：\n* 第一项\n* 第二项\n* 第三项\n\n+ 第一项\n+ 第二项\n+ 第三项\n\n- 第一项\n- 第二项\n- 第三项\n\n有序列表使用数字并加上.号来表示：\n1. 第一项\n2. 第二项\n3. 第三项\n\n\n\n列表嵌套列表嵌套只需在子列表中的选项前面添加四个空格即可：\n1. 第一项\n       - 第一项\n       - 第一项\n2. 第二项\n       - 第二项\n       - 第二项\n\n\n四、区块区块引用是在段落开头使用&gt;符号，然后后面紧跟一个空格符号：\n&gt; 区块引用\n\n1.区块中使用列表&gt; 区块中使用列表\n&gt; 1. 第一项\n&gt; 2. 第二项\n&gt; + 第一项\n&gt; + 第二项\n&gt; + 第三项\n\n2.列表中使用区块如果要在列表项目内放进区块，那么就需要在&gt;前添加四个空格的缩进：\n+ 第一项\n  &gt; 区块引用\n  &gt; 区块引用\n+ 第二项\n\n\n五、代码1.如果是段落上的一个函数或片段的代码可以用反引号(`)把它包起来:\n&#96;printf()&#96;函数\n\n2.代码区块：段落前加三个反引号(`)\n&#96;&#96;&#96;代码区块\n\n\n\n\n六、链接链接使用方法如下：\n[链接名称](链接地址)\n或者\n&lt;链接地址&gt;\n\n\n七、图片图片语法格式如下：\n![alt 属性文本](图片地址)\n![alt 属性文本](图片地址&quot;可选标题&quot;)\n\n\n开头一个感叹号!\n接着一个方括号，里面放上图片的替代文字\n接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的’title‘属性的文字。\n\n\n八、表格制作表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。\n语法格式如下：\n| 表头 | 表头 |\n| --- | --- |\n| 单元格 | 单元格 |\n| 单元格 | 单元格 |\n\n对齐方式:\n\n--:：右对齐\n\n:--：左对齐\n\n:-:：居中对齐\n\n\n\nMarkdown更多高级技巧\n\n","slug":"Markdown写作语法","date":"2021-08-04T01:59:59.000Z","categories_index":"Markdown","tags_index":"Markdown","author_index":"DY"}]